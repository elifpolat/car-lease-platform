openapi: 3.0.3
info:
  title: Car Lease Platform API
  version: 1.0.0
  description: API documentation for the Car Lease Platform
servers:
  - url: http://localhost:8080
    description: Local development server
tags:
  - name: carLease
    description: Provides car leasing services
  - name: customer
    description: Provides customer-related services
  - name: car
    description: Provides car-related services
paths:
  /api/customers:
    get:
      summary: Get all customers
      description: Retrieve a list of all customers.
      operationId: getAllCustomers
      tags:
        - customer
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerApiModel'
        '401':
          description: Unauthorized
    post:
      summary: Add a new customer
      description: Create a new customer and save it to the database.
      operationId: addCustomer
      tags:
        - customer
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerApiModel'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApiModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /api/customers/{id}:
    get:
      summary: Get a customer by ID
      description: Retrieve a specific customer by their ID.
      operationId: getCustomerById
      tags:
        - customer
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the customer to retrieve
      responses:
        '200':
          description: Customer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerApiModel'
        '404':
          description: Customer not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete a customer
      description: Remove a specific customer by their ID.
      operationId: deleteCustomerById
      tags:
        - customer
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the customer to delete
      responses:
        '204':
          description: Customer deleted successfully
        '404':
          description: Customer not found
        '401':
          description: Unauthorized
  /api/cars:
    get:
      summary: Get all cars
      description: Retrieve a list of all cars.
      operationId: getAllCars
      tags:
        - car
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of cars
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CarApiModel'
        '401':
          description: Unauthorized
    post:
      summary: Add a new car
      description: Create a new car and save it to the database.
      operationId: addCar
      tags:
        - car
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarApiModel'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarApiModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /api/cars/{id}:
    get:
      summary: Get a car by ID
      description: Retrieve a specific car by its ID.
      operationId: getCarById
      tags:
        - car
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the car to retrieve
      responses:
        '200':
          description: Car retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarApiModel'
        '404':
          description: Car not found
        '401':
          description: Unauthorized
    delete:
      summary: Delete a car
      description: Remove a specific car by its ID.
      operationId: deleteCarById
      tags:
        - car
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the car to delete
      responses:
        '204':
          description: Car deleted successfully
        '404':
          description: Car not found
        '401':
          description: Unauthorized
  /api/lease/calculate:
    post:
      summary: Calculate lease rate
      description: Calculate the lease rate based on input parameters.
      operationId: calculateLeaseRate
      tags:
        - carLease
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaseRateApiModel'
      responses:
        '200':
          description: Lease rate calculated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseRateResponse'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
  /api/lease/calculate-with-car-id:
    post:
      summary: Calculate lease rate using car ID
      description: Calculate the lease rate based on a car ID and other input parameters. The `nettPrice` is optional as the car ID will be used to fetch the car details.
      operationId: calculateLeaseRateUsingCarId
      tags:
        - carLease
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                leaseRateRequest:
                  $ref: '#/components/schemas/LeaseRateApiModel'
                carId:
                  type: integer
                  format: int64
                  description: ID of the car
              required:
                - leaseRateRequest
                - carId
      responses:
        '200':
          description: Lease rate calculated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaseRateResponse'
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiErrors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          description: Messages that can be displayed to the end user
    ApiError:
      type: object
      x-class-extra-annotation: "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)"
      properties:
        error:
          type: string
          description: |
            Indicates a predefined list of possible errors that could occur.
            * `CAR_NOT_FOUND` - Car is not found
            * `CUSTOMER_NOT_FOUND` - Customer is not found
          enum:
            - CAR_NOT_FOUND
            - CUSTOMER_NOT_FOUND
        error_description:
          type: string
          description: Description about the error.
        error_hint:
          type: string
          description: Information about the error field
        status_code:
          type: integer
          description: HTTP status code for the error
        error_debug:
          type: string
          description: Detailed description of the error.
    CustomerApiModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the customer
        name:
          type: string
          description: Full name of the customer
        street:
          type: string
          description: Street address of the customer
        houseNumber:
          type: string
          description: House number of the customer
        zipCode:
          type: string
          description: ZIP code of the customer
        place:
          type: string
          description: City or town of the customer
        email:
          type: string
          description: Email address of the customer
          format: email
        phoneNumber:
          type: string
          description: Phone number of the customer
      required:
        - name
        - email
        - phoneNumber
    CarApiModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the car
        brand:
          type: string
          description: Brand of the car
        model:
          type: string
          description: Model of the car
        version:
          type: string
          description: Version of the car
        numberOfDoors:
          type: integer
          description: Number of doors
          minimum: 2
          maximum: 5
        co2Emission:
          type: integer
          description: CO2 emission of the car
          minimum: 0
        grossPrice:
          type: number
          format: double
          description: Gross price of the car
          minimum: 0.01
        nettPrice:
          type: number
          format: double
          description: Nett price of the car
          minimum: 0.01
      required:
        - brand
        - model
        - version
        - numberOfDoors
        - co2Emission
        - grossPrice
        - nettPrice
    LeaseRateApiModel:
      type: object
      properties:
        mileage:
          type: number
          format: double
          description: Mileage per month
        duration:
          type: integer
          description: Duration of the lease in months
        interestRate:
          type: number
          format: double
          description: Interest rate as a percentage
        nettPrice:
          type: number
          format: double
          description: Nett price of the car (optional when using car ID)
          required:
            - mileage
            - duration
            - interestRate
    LeaseRateResponse:
      type: object
      properties:
        leaseRate:
          type: number
          format: double
          description: Calculated lease rate
security:
  - BearerAuth: []
